{"version":3,"sources":["theme.js","SkillsList.js","App.js","registerServiceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","SkillsList","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoaded","skills","inherits","createClass","key","value","_this$state","react_default","a","createElement","length","className","map","skill","name","Card_default","CardContent_default","Typography_default","variant","component","paragraph","proficiency","description","Divider_default","experience","CardActions_default","Button_default","size","color","href","website","target","rel","tags","tag","Chip_default","label","_this2","window","fetch","setState","process","then","results","json","r","toString","Component","withStyles","title","marginBottom","fontSize","App","apply","arguments","classes","CssBaseline_default","styles","AppBar_default","position","Toolbar_default","inherit","IconButton_default","menuButton","aria-label","ArrowBack_default","src_SkillsList_0","textDecoration","marginLeft","marginRight","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","concat","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d9112b7c.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#d50000'\n    },\n    secondary: {\n      main: '#1e88e5'\n    }\n  }\n});\n\nexport default theme;\n","import React, { Component } from 'react';\nimport './SkillsList.css';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  title: {\n    marginBottom: 16,\n    fontSize: 14\n  }\n};\n\nexport class SkillsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      skills: []\n    };\n  }\n\n  render() {\n    const { error, isLoaded, skills } = this.state;\n\n    if (error) {\n      return (\n        <p>\n          <strong>Error: </strong> {error}\n        </p>\n      );\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else if (!skills || !skills.length) {\n      return <p>No skills to show</p>;\n    } else {\n      return (\n        <section className=\"skills-list\">\n          {skills.map(skill => (\n            <div key={skill.name}>\n              <Card className=\"skill-card\">\n                <CardContent>\n                  <Typography variant=\"headline\" component=\"h2\">\n                    {skill.name}\n                  </Typography>\n                  <Typography variant=\"subheading\" paragraph=\"true\">\n                    Proficiency: {skill.proficiency}/10\n                  </Typography>\n                  <Typography className=\"skill-description\" paragraph=\"true\">\n                    {skill.description}\n                  </Typography>\n                  <Divider />\n                  <Typography\n                    variant=\"subheading\"\n                    className=\"experience-header\"\n                  >\n                    Experience\n                  </Typography>\n                  <Typography className=\"skill-description\" paragraph=\"true\">\n                    {skill.experience}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    color=\"secondary\"\n                    href={skill.website}\n                    target=\"__blank\"\n                    rel=\"noopener\"\n                  >\n                    Skill Info\n                  </Button>\n                  <span className=\"flex\" />\n                  <div>\n                    {skill.tags.map(tag => <Chip key={tag} label={tag} />)}\n                  </div>\n                </CardActions>\n              </Card>\n            </div>\n          ))}\n        </section>\n      );\n    }\n  }\n\n  componentDidMount() {\n    if (!window.fetch) {\n      this.setState({\n        error: 'Your browser does not support the fetch API'\n      });\n    }\n\n    fetch(process.env.PUBLIC_URL + '/skills.json')\n      .then(results => results.json())\n      .then(r => r.skills)\n      .then(\n        skills => {\n          this.setState({\n            isLoaded: true,\n            skills\n          });\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error: (error || 'Unknown API load error').toString()\n          });\n        }\n      );\n  }\n}\n\nexport default withStyles(styles)(SkillsList);\n","import React, { Component } from 'react';\nimport './App.css';\nimport theme from './theme';\nimport SkillsList from './SkillsList';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  inherit: {\n    color: 'inherit',\n    textDecoration: 'inherit'\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  }\n};\n\nexport class App extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className=\"App\">\n        <CssBaseline />\n        <MuiThemeProvider theme={theme}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <a href=\"..\" className={classes.inherit}>\n                <IconButton\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"Up Button\"\n                >\n                  <ArrowBack />\n                </IconButton>\n              </a>\n              <Typography variant=\"title\" color=\"inherit\">\n                Anthony's Web Skills\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <SkillsList />\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}